     Assembly listing for: PROYECTO.mas
                Assembled: Wed Jul 23 16:23:04 COT 2025

         |                 ORG 100                   
100 5000 |                 INPUT                     
101 2182 |                 STORE CONTADOR            
         |                                          
102 1182 |  LOOP           LOAD CONTADOR             
103 8800 |                 SKIPCOND 800              
104 9173 |                 JUMP FIN                  
         |                                          	
105 010C |                 JNS INICIO                
         |                                          
106 1183 |  DISCOUNTLOOP   LOAD MAX                  
107 6000 |                 OUTPUT                    
108 1182 |                 LOAD CONTADOR             
109 417B |                 SUBT uno                  
10A 2182 |                 STORE CONTADOR            
10B 9102 |                 JUMP LOOP                 
         |                                          
10C 0000 |  INICIO         DEC 0                     
10D 5000 |                 INPUT                     
10E 2174 |                 STORE a                   
10F 0144 |                 JNS ACTUALIZAR_MAX        
110 012C |                 JNS finCollatz            
111 0112 |                 JNS cicloCollatz          
         |                                           
112 1174 |  cicloCollatz   LOAD a                    
113 1174 |                 LOAD a                    
114 2175 |                 STORE verify_a            
115 0116 |                 JNS verify                
         |                                           
         |                                           
         |                                          /par o impar?
116 0000 |  verify         DEC 0                     
117 1175 |  ciclo          LOAD verify_a             
118 8400 |                 SKIPCOND 400             / Si R == 0, es par
119 911B |                 JUMP cicloRes            /no
11A 9127 |                 JUMP es_par              /yes
11B 1175 |  cicloRes       LOAD verify_a             
11C 417C |                 SUBT dos                  
11D 8000 |                 SKIPCOND 000             / Si resultado < 0, es impar (R == 1)
11E 9120 |                 JUMP no_action           /no
11F 9122 |                 JUMP es_impar            /yes
120 2175 |  no_action      STORE verify_a            
121 9117 |                 JUMP ciclo                
         |                                           
122 117B |  es_impar       LOAD uno                  
123 0139 |                 JNS ESIMPAR               
124 012C |                 JNS finCollatz            
125 0112 |                 JNS cicloCollatz          
126 C116 |                 JUMPI verify              
         |                                           
127 1178 |  es_par         LOAD zero                 
128 0132 |                 JNS ESPAR                 
129 012C |                 JNS finCollatz            
12A 0112 |                 JNS cicloCollatz          
12B C116 |                 JUMPI verify              
         |                                           
12C 0000 |  finCollatz     DEC 0                     
12D 1174 |                 LOAD a                    
12E 417B |                 SUBT uno                  
12F 8400 |                 SKIPCOND 400              
130 C12C |                 JUMPI finCollatz         /no
131 9106 |                 JUMP DISCOUNTLOOP         
         |                                           
         |                                           
         |                                          /si es par  se divide entre 2
         |                                          
132 0000 |  ESPAR          DEC 0                     
133 1174 |                 LOAD a                    
134 217E |                 STORE div_a               
135 014D |                 JNS div                   
136 2174 |                 STORE a                   
137 0144 |                 JNS ACTUALIZAR_MAX        
138 C132 |                 JUMPI ESPAR               
         |                                          
         |                                           
         |                                          /si es impar se triplica y se suma 1
139 0000 |  ESIMPAR        DEC 0                     
13A 1174 |                 LOAD a                    
13B 217A |                 STORE mul_a               
13C 0162 |                 JNS mul                   
13D 2174 |                 STORE a                   
13E 0144 |                 JNS ACTUALIZAR_MAX       / ? después de multiplicar por 3
13F 1174 |                 LOAD a                    
140 317B |                 ADD uno                   
141 2174 |                 STORE a                   
142 0144 |                 JNS ACTUALIZAR_MAX       / ? después de sumar 1
143 C139 |                 JUMPI ESIMPAR             
         |                                          
         |                                           
144 0000 |  ACTUALIZAR_MAX DEC 0                     
145 1174 |                 LOAD a                    
146 4183 |                 SUBT MAX                  
147 8000 |                 SKIPCOND 000             / Si a == MAX ? no actualizar
148 8800 |                 SKIPCOND 800             / Si a > MAX ? actualizar
149 914C |                 JUMP NO_UPDATE            
14A 1174 |                 LOAD a                    
14B 2183 |                 STORE MAX                 
14C C144 |  NO_UPDATE      JUMPI ACTUALIZAR_MAX      
         |                                          
         |                                          /------------------------------------------------
         |                                          /divide entre 2
14D 0000 |  div            DEC 0                     
14E A000 |                 CLEAR                     
14F 217F |                 STORE div_q              / m=0
150 117E |                 LOAD div_a                
151 2180 |                 STORE div_r              /r=a
         |                                           
152 1180 |  div_while      LOAD div_r                
153 417C |                 SUBT dos                  
154 2180 |                 STORE div_r               
155 8400 |                 SKIPCOND 400              
156 9158 |                 JUMP positiv             /no
157 915B |                 JUMP next                /yes
         |                                           
158 8800 |  positiv        SKIPCOND 800              
159 9160 |                 JUMP div_endw            /no
15A 915B |                 JUMP next                /yes
         |                                           
15B 2180 |  next           STORE div_r               
15C 117F |                 LOAD div_q                
15D 3181 |                 ADD div_one               
15E 217F |                 STORE div_q              / q=q+1
15F 9152 |                 JUMP div_while            
         |                                           
160 117F |  div_endw       LOAD div_q                
161 C14D |                 JUMPI div                 
         |                                           
         |                                          /multiplica por 3
162 0000 |  mul            DEC 0                     
         |                                           
163 1178 |                 LOAD zero                 
164 2176 |                 STORE mul_m              / m=0
165 2177 |                 STORE mul_i              /i=0
         |                                           
166 1177 |  mul_while      LOAD mul_i                
167 417A |                 SUBT mul_a                
168 8000 |                 SKIPCOND 000             /i<a?
169 9171 |                 JUMP mul_endw            /no
16A 1176 |                 LOAD mul_m               /yes
16B 317D |                 ADD tres                  
16C 2176 |                 STORE mul_m              / m= m+b
         |                                           
16D 1177 |                 LOAD mul_i                
16E 3179 |                 ADD mul_one               
16F 2177 |                 STORE mul_i              / i=i+1
         |                                           
170 9166 |                 JUMP mul_while            
         |                                           
171 1176 |  mul_endw       LOAD mul_m                
172 C162 |                 JUMPI mul                 
         |                                          
         |                                          
173 7000 |  FIN            HALT                      
         |                                          
         |                                          
174 0000 |  a              DEC 0                     
175 0000 |  verify_a       DEC 0                     
176 0000 |  mul_m          DEC 0                     
177 0000 |  mul_i          DEC 0                     
178 0000 |  zero           DEC 0                     
179 0001 |  mul_one        DEC 1                     
17A 0000 |  mul_a          DEC 0                     
17B 0001 |  uno            DEC 1                     
17C 0002 |  dos            DEC 2                     
17D 0003 |  tres           DEC 3                     
17E 0000 |  div_a          DEC 0                     
17F 0000 |  div_q          DEC 0                     
180 0000 |  div_r          DEC 0                     
181 0001 |  div_one        DEC 1                     
182 0000 |  CONTADOR       DEC 0                     
183 0000 |  MAX            DEC 0                     

Assembly successful.

         SYMBOL TABLE
         ----------------------------------------------------------
          Symbol         | Defined | References 
         ----------------+---------+-------------------------------
          ACTUALIZAR_MAX |   144   | 10F, 137, 13E, 142, 14C
          CONTADOR       |   182   | 101, 102, 108, 10A
          DISCOUNTLOOP   |   106   | 131
          ESIMPAR        |   139   | 123, 143
          ESPAR          |   132   | 128, 138
          FIN            |   173   | 104
          INICIO         |   10C   | 105
          LOOP           |   102   | 10B
          MAX            |   183   | 106, 146, 14B
          NO_UPDATE      |   14C   | 149
          a              |   174   | 10E, 112, 113, 12D, 133, 136, 
                         |         | 13A, 13D, 13F, 141, 145, 14A
          ciclo          |   117   | 121
          cicloCollatz   |   112   | 111, 125, 12A
          cicloRes       |   11B   | 119
          div            |   14D   | 135, 161
          div_a          |   17E   | 134, 150
          div_endw       |   160   | 159
          div_one        |   181   | 15D
          div_q          |   17F   | 14F, 15C, 15E, 160
          div_r          |   180   | 151, 152, 154, 15B
          div_while      |   152   | 15F
          dos            |   17C   | 11C, 153
          es_impar       |   122   | 11F
          es_par         |   127   | 11A
          finCollatz     |   12C   | 110, 124, 129, 130
          mul            |   162   | 13C, 172
          mul_a          |   17A   | 13B, 167
          mul_endw       |   171   | 169
          mul_i          |   177   | 165, 166, 16D, 16F
          mul_m          |   176   | 164, 16A, 16C, 171
          mul_one        |   179   | 16E
          mul_while      |   166   | 170
          next           |   15B   | 157, 15A
          no_action      |   120   | 11E
          positiv        |   158   | 156
          tres           |   17D   | 16B
          uno            |   17B   | 109, 122, 12E, 140
          verify         |   116   | 115, 126, 12B
          verify_a       |   175   | 114, 117, 11B, 120
          zero           |   178   | 127, 163
         ----------------------------------------------------------

