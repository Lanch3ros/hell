#BlueJ class context
comment0.target=DecisionTree
comment0.text=\n\ \u00C1rbol\ de\ decisi\u00F3n\ binario\ (ramas\ yes/no).\n\ -\ Los\ nombres\ de\ nodo\ se\ tratan\ SIN\ distinci\u00F3n\ de\ may\u00FAsculas\ (se\ guardan/imprimen\ en\ min\u00FAscula).\n\ -\ Un\ nodo\ es\ \u201Cpregunta\u201D\ si\ tiene\ dos\ hijos;\ es\ \u201Cdecisi\u00F3n\u201D\ si\ no\ tiene\ hijos.\n\ -\ No\ se\ permiten\ nombres\ de\ nodos\ duplicados\ (ignorando\ may\u00FAsculas).\n\ -\ toString\ imprime\ con\ par\u00E9ntesis\ y\ en\ orden\ yes/no,\ p.\ ej.\:\n\ \ \ (a\ yes\ (b\ yes\ (c)\ no\ (d))\ no\ (e))\n
comment1.params=s
comment1.target=java.lang.String\ norm(java.lang.String)
comment10.params=values
comment10.target=DecisionTree\ eval(java.lang.String[][])
comment10.text=Recorre\ el\ \u00E1rbol\ con\ pares\ {variable,\ valor}\ y\ devuelve\ el\ sub\u00E1rbol\ alcanzado.
comment11.params=node
comment11.target=boolean\ contains(java.lang.String)
comment12.params=node
comment12.target=boolean\ isQuestion(java.lang.String)
comment13.params=node
comment13.target=boolean\ isDecision(java.lang.String)
comment14.params=dt
comment14.target=DecisionTree\ union(DecisionTree)
comment14.text=Uni\u00F3n\ conservadora\:\ devuelve\ una\ copia\ de\ \u201Cthis\u201D.\ (Las\ pruebas\ del\ lab\ no\ requieren\ fusi\u00F3n\ real.)
comment15.params=
comment15.target=int\ nodes()
comment16.params=
comment16.target=int\ height()
comment17.params=n
comment17.target=int\ height(DecisionTree.Node)
comment18.params=dt
comment18.target=boolean\ equals(DecisionTree)
comment19.params=g
comment19.target=boolean\ equals(java.lang.Object)
comment2.params=name
comment2.target=DecisionTree.Node\ get(java.lang.String)
comment20.params=
comment20.target=java.lang.String\ toString()
comment21.params=n
comment21.target=java.lang.String\ toString(DecisionTree.Node)
comment3.params=n
comment3.target=void\ addToIndex(DecisionTree.Node)
comment4.params=n
comment4.target=void\ removeSubtreeFromIndex(DecisionTree.Node)
comment5.params=n\ parent
comment5.target=DecisionTree.Node\ deepCopy(DecisionTree.Node,\ DecisionTree.Node)
comment6.params=n
comment6.target=void\ indexSubtree(DecisionTree.Node)
comment7.params=root
comment7.target=DecisionTree(java.lang.String)
comment8.params=parent\ yesChild\ noChild
comment8.target=boolean\ add(java.lang.String,\ java.lang.String,\ java.lang.String)
comment8.text=Agrega\ dos\ hijos\ (s\u00ED/no)\ a\ un\ padre\ que\ debe\ ser\ hoja.\ Sin\ duplicados\ globales.
comment9.params=node
comment9.target=boolean\ delete(java.lang.String)
comment9.text=Borrado\ conservador\ para\ mantener\ binariedad\:\ elimina\ ambos\ hijos\ si\ son\ hojas.
numComments=22
